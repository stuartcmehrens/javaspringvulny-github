trigger:
- main

stages:
- stage: build
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Gradle@3
      inputs:
        workingDirectory: '$(system.defaultWorkingDirectory)'
        options: '--write-locks'
        gradleWrapperFile: 'gradlew'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: 'default'
        jdkArchitectureOption: 'x64'
        tasks: 'dependencies'
    - task: Gradle@3
      inputs:
        workingDirectory: '$(system.defaultWorkingDirectory)'
        gradleWrapperFile: 'gradlew'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: 'default'
        jdkArchitectureOption: 'x64'
        tasks: 'build'
    - task: CopyFiles@2
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)'
        contents: '**/*.lockfile'
        targetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: lockfile
    
- stage: semgrep
  variables:
  - group: javaspringvulny
  dependsOn: build
  jobs:
  - job: semgrep
    pool:
      vmImage: 'ubuntu-latest'
    container: semgrep/semgrep
    steps:
    - download: current
      artifact: lockfile
    - script: ls -al
    - script: |
        if [ $(Build.SourceBranchName) = "main" ]; then
            echo "Semgrep full scan"
            semgrep ci
        elif [ $(System.PullRequest.PullRequestId) -ge 0 ]; then
            echo "Semgrep diff scan"
            export SEMGREP_PR_ID=$(System.PullRequest.PullRequestId)
            export SEMGREP_BASELINE_REF='origin/main'
            git fetch origin main:origin/main
            semgrep ci
        fi
      env:
        SEMGREP_APP_TOKEN: $(semgrepAppToken)
